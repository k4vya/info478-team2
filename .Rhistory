# Create a line graph showing the number of people in each state ("S", "I", "R")
# each year
ggplot(by_year) +
geom_line(aes(x = year, y = n, colour = status, group=status)) +
labs(
x = "Year",
y = "Number of People",
title = "Chicken Pox in a Population"
) +
scale_color_discrete(labels = c("Infected", "Resistant", "Susceptible"))
# Chicken Pox Simulation
library(tidyverse)
# Initial settings
pop <- rep("S", 1000)
pr_pox <- .2
data <- data.frame(
id = 1:1000,
year_0 = pop,
stringsAsFactors = F
)
# Iterate over 15 years
for (i in 1:15) {
# Store this year's column and last year's column names in variables
this_year <- paste0("year_", i)
last_year <- paste0("year_", i-1)
# To start, set this year in the data as status from last year
data[this_year] <- data[last_year]
# Create a data frame of new *infected* cases by giving every susceptible
# a probability of getting infected (using rbinom())
new_cases <- data %>%
filter(get(last_year) == "S") %>%
mutate(infected = rbinom(n(), 1, pr_pox)) %>%
filter(infected == 1) %>%
select(id, infected)
# Join your dataframe of new_cases onto the old dataframe
data <- data %>%
left_join(new_cases, by = "id") %>%
mutate(infected = if_else(is.na(infected), 0, 1))
# Replace the current year's values as infected where infections happened
data[data$infected == 1, this_year] <- "I"
# Set infected from last year to resistent this year
data[data[last_year] == "I", this_year] <- "R"
# Drop the `infected` column (so it can be recreated in the next iteration)
data <- data %>%
select(-infected)
}
# Compute number of people in each state in each year (to graph over time)
# Hint: you'll need to thoughtfully reshape the data using `pivot_longer`
long_data <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_"
#names_ptypes = list(year = numeric())
)
list(year==())
list(numeric())
# Create a line graph showing the number of people in each state ("S", "I", "R")
# each year
by_year <- long_data %>%
group_by(year, status) %>%
count() %>%
arrange(status, year)
ggplot(data = by_year) +
geom_line(mapping = aes(x = year, y = n, group = status, color = status)) +
scale_color_discrete(labels = c("Infected", "Resistant", "Susceptible"))
# Compute number of people in each state in each year (to graph over time)
# Hint: you'll need to thoughtfully reshape the data using `pivot_longer`
long_data <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_"
names_ptypes = list(year = numeric())
)
# Compute number of people in each state in each year (to graph over time)
# Hint: you'll need to thoughtfully reshape the data using `pivot_longer`
long_data <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_",
names_ptypes = list(year = numeric())
)
# Compute number of people in each state in each year (to graph over time)
# Hint: you'll need to thoughtfully reshape the data using `pivot_longer`
long_data <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_",
names_ptypes = (year = numeric())
)
# Create a line graph showing the number of people in each state ("S", "I", "R")
# each year
ggplot(by_year) +
geom_line(aes(x = year, y = n, colour = status, group=status)) +
labs(
x = "Year",
y = "Number of People",
title = "Chicken Pox in a Population"
) +
scale_color_discrete(labels = c("Infected", "Resistant", "Susceptible"))
by_year <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_",
names_ptypes = (year=numeric())
) %>%
group_by(year, status) %>%
count() %>%
arrange(year, status)
# Create a line graph showing the number of people in each state ("S", "I", "R")
# each year
ggplot(by_year) +
geom_line(aes(x = year, y = n, colour = status, group=status)) +
labs(
x = "Year",
y = "Number of People",
title = "Chicken Pox in a Population"
) +
scale_color_discrete(labels = c("Infected", "Resistant", "Susceptible"))
by_year <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_",
names_ptypes = (year=numeric())
) %>%
group_by(year, status) %>%
count() %>%
arrange(year, status)
by_year$n<-as.numeric(by_year$n)
str(by_year)
View(by_year)
by_year$year<-as.numeric(by_year$year)
str(by_year)
# Create a line graph showing the number of people in each state ("S", "I", "R")
# each year
ggplot(by_year) +
geom_line(aes(x = year, y = n, colour = status, group=status)) +
labs(
x = "Year",
y = "Number of People",
title = "Chicken Pox in a Population"
) +
scale_color_discrete(labels = c("Infected", "Resistant", "Susceptible"))
by_year <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_",
names_ptypes = (year=numeric())
) %>%
group_by(year, status) %>%
count() %>%
arrange(year, status)
# Create a line graph showing the number of people in each state ("S", "I", "R")
# each year
ggplot(by_year) +
geom_line(aes(x = year, y = n, colour = status, group=status)) +
labs(
x = "Year",
y = "Number of People",
title = "Chicken Pox in a Population"
) +
scale_color_discrete(labels = c("Infected", "Resistant", "Susceptible"))
str(by_year)
?names_ptypes
?pivot_longer
?pivot_longer
by_year <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_",
names_ptypes = list(year=is.numeric())
) %>%
group_by(year, status) %>%
count() %>%
arrange(year, status)
by_year <- data %>%
pivot_longer(-id,
names_to = "year",
values_to = "status",
names_prefix = "year_",
names_ptypes = list(as.numeric(year))
) %>%
group_by(year, status) %>%
count() %>%
arrange(year, status)
data<-fread(paste0(dir,"severe_complicated_influ.csv"))
library(data.table)
library(mgcv)
library(dlnm)
dir<-"H:/repos/iSchool/disease_modelling/"
data<-fread(paste0(dir,"severe_complicated_influ.csv"))
colnames(data)<-c("Onset","Excluded","Pending","Confirmed")
data[,date:=strptime(paste0(Onset,"1"),"%Y%U%u")]
data[,trend:=as.numeric(seq(1:nrow(data)))]
colnames(data)<-c("Onset","Excluded","Pending","Confirmed")
data[,date:=strptime(paste0(Onset,"1"),"%Y%U%u")]
data[,trend:=as.numeric(seq(1:nrow(data)))]
data[,month:=as.numeric(format(date,"%m"))]
data[,year:=as.numeric(format(date,"%Y"))]
### Explore time series
plot(data$date,data$Confirmed, xlab="",ylab="Cases",type="l",ylim=c(0,300))
par(new=TRUE)
plot(data$date,data$Excluded, xlab="",ylab="",type="l",ylim=c(0,300),col="gray",lty=2)
### Fit a loess smoother
lo.con <- loess(data$Confirmed ~ data$trend, span=0.1, degree=2)
p.con<-predict(lo.con, data.frame(trend = seq(1, nrow(data), 1)), se = TRUE)
install.packages("smooth")
install.packages("smooth")
dir<-"H:/repos/iSchool/disease_modelling/"
data<-fread(paste0(dir,"severe_complicated_influ.csv"))
library(data.table)
library(mgcv)
library(dlnm)
library(smooth)
dir<-"H:/repos/iSchool/disease_modelling/"
data<-fread(paste0(dir,"severe_complicated_influ.csv"))
colnames(data)<-c("Onset","Excluded","Pending","Confirmed")
data[,date:=strptime(paste0(Onset,"1"),"%Y%U%u")]
data[,trend:=as.numeric(seq(1:nrow(data)))]
data[,month:=as.numeric(format(date,"%m"))]
data[,year:=as.numeric(format(date,"%Y"))]
### Explore time series
plot(data$date,data$Confirmed, xlab="",ylab="Cases",type="l",ylim=c(0,300))
par(new=TRUE)
plot(data$date,data$Excluded, xlab="",ylab="",type="l",ylim=c(0,300),col="gray",lty=2)
### Fit a loess smoother
lo.con <- loess(data$Confirmed ~ data$trend, span=0.1, degree=2)
?sma
ourModel <- sma(data$Confirmed,h=18,holdout=TRUE,interval="sp")
mave <- sma(data$Confirmed,h=18,holdout=TRUE,interval="sp")
plot(mave)
plot(mave$fitted)
plot(data$date,mave$fitted)
mave <- sma(data$Confirmed,h=0,holdout=TRUE,interval="sp")
plot(data$date,mave$fitted)
mave <- sma(data$Confirmed)
plot(data$date,mave$fitted)
y <- movavg(data$Confirmed, 5, "s")# <- sma(data$Confirmed)
#library(smooth)
install.packages("pracma")
install.packages("pracma")
library(pracma)
y <- movavg(data$Confirmed, 5, "s")# <- sma(data$Confirmed)
plot(data$date,y$fitted)
plot(y)
y <- movavg(data$Confirmed, 15, "s")# <- sma(data$Confirmed)
str(y)
?movavg
abbshares <- scan(file="")
main = "Types of moving averages", sub = "Mid 2011--Mid 2012",
xlab = "Days", ylab = "ABB Shares Price (in USD)")
plot(data$Confirmed, type = "l", col = 1, ylim = c(15, 30),
main = "Types of moving averages", sub = "Mid 2011--Mid 2012",
xlab = "Days", ylab = "ABB Shares Price (in USD)")
plot(data$Confirmed, type = "l", col = 1, ylim = c(1, 300),
main = "Types of moving averages", sub = "Mid 2011--Mid 2012",
xlab = "Days", ylab = "ABB Shares Price (in USD)")
y <- movavg(data$Confirmed, 50, "s"); lines(y, col = 2)
y <- movavg(data$Confirmed, 50, "s"); lines(y, col = 2)
y <- movavg(data$Confirmed, 50, "t"); lines(y, col = 3)
y <- movavg(data$Confirmed, 50, "w"); lines(y, col = 4)
y <- movavg(data$Confirmed, 50, "m"); lines(y, col = 5)
y <- movavg(data$Confirmed, 50, "e"); lines(y, col = 6)
y <- movavg(data$Confirmed, 50, "r"); lines(y, col = 7)
grid()
legend(120, 29, c("original data", "simple", "triangular", "weighted",
"modified", "exponential", "running"),
col = 1:7, lty = 1, lwd = 1, box.col = "gray", bg = "white")
legend(600, 299, c("original data", "simple", "triangular", "weighted",
"modified", "exponential", "running"),
col = 1:7, lty = 1, lwd = 1, box.col = "gray", bg = "white")
legend(500, 299, c("original data", "simple", "triangular", "weighted",
"modified", "exponential", "running"),
col = 1:7, lty = 1, lwd = 1, box.col = "gray", bg = "white")
legend(500, -299, c("original data", "simple", "triangular", "weighted",
"modified", "exponential", "running"),
col = 1:7, lty = 1, lwd = 1, box.col = "gray", bg = "white")
plot(data$Confirmed, type = "l", col = 1, ylim = c(1, 300),
main = "Types of moving averages", sub = "Mid 2011--Mid 2012",
xlab = "Days", ylab = "ABB Shares Price (in USD)")
y <- movavg(data$Confirmed, 5, "s"); lines(y, col = 2)
y <- movavg(data$Confirmed, 15, "s"); lines(y, col = 2)
y <- movavg(data$Confirmed, 25, "s"); lines(y, col = 2)
plot(data$Confirmed, type = "l", col = 1, ylim = c(1, 300),
main = "Types of moving averages", sub = "Mid 2011--Mid 2012",
xlab = "Days", ylab = "ABB Shares Price (in USD)")
y <- movavg(data$Confirmed, 25, "s"); lines(y, col = 2)
### Moving averages
plot(data$Confirmed, type = "l", col = 1, ylim = c(1, 300),
xlab = "", ylab = "Cases")
y <- movavg(data$Confirmed, 25, "s"); lines(y, col = 2)
y <- movavg(data$Confirmed, 25, "w"); lines(y, col = 2)
y <- movavg(data$Confirmed, 25, "r"); lines(y, col = 2)
### Moving averages
plot(data$Confirmed, type = "l", col = 1, ylim = c(1, 300),
xlab = "", ylab = "Cases")
y <- movavg(data$Confirmed, 25, "r"); lines(y, col = 2)
y <- movavg(data$Confirmed, 25, "w"); lines(y, col = 2)
unemployment <- as.data.table(read.csv("http://datasets.flowingdata.com/unemployment-rate-1948-2010.csv", sep=","))
library(data.table)
library(mgcv)
library(dlnm)
library(pracma)
unemployment <- as.data.table(read.csv("http://datasets.flowingdata.com/unemployment-rate-1948-2010.csv", sep=","))
str(unemployment)
write.csv(unemployment,paste0(dir,"unemployment.csv"))
library(data.table)
library(mgcv)
library(dlnm)
dir<-"/homes/katburk/repos/iSchool/disease_modelling/"
dir<-"H:/repos/iSchool/disease_modelling/"
data<-fread(paste0(dir,"Life Expectancy Data.csv"))
str(data)
COR<-cor(na.omit(data[,4:22]))
require(ncdf4, lib.loc="/homes/katburk/R/")
install.packages("psych",loc="/homes/katburk/R/")
library("psych", lib.loc="/homes/katburk/R/")
install.packages("psych")
library("psych")
pairs.panels(data[,4:22], histogram=TRUE, pch=19)
library(data.table)
library(mgcv)
library(dlnm)
dir<-"/homes/katburk/repos/iSchool/disease_modelling/"
str(data)
View(data)
dir<-"/homes/katburk/repos/iSchool/disease_modelling/"
data<-fread(paste0(dir,"Life Expectancy Data.csv"))
DATA<-data[,c("Country","Year","Status","Life expectancy","Alcohol","percentage expenditure","Total expenditure",
"BMI","GDP","Income composition of resources","Schooling")]
COR<-cor(na.omit(DATA[,4:11]))
DATA<-data[,c("Country","Year","Status","Life expectancy","Alcohol","percentage expenditure","Total expenditure",
"BMI","GDP","Income composition of resources","Schooling")]
dir<-"/homes/katburk/repos/iSchool/disease_modelling/"
data<-fread(paste0(dir,"Life Expectancy Data.csv"))
DATA<-data[,c("Country","Year","Status","Life expectancy","Alcohol","percentage expenditure","Total expenditure",
"BMI","GDP","Income composition of resources","Schooling")]
str(data)
data<-fread(paste0(dir,"Life Expectancy Data.csv"))
dir<-"H:/repos/iSchool/disease_modelling/"
data<-fread(paste0(dir,"Life Expectancy Data.csv"))
str(data)
DATA<-data[,c("Country","Year","Status","Life expectancy","Alcohol","percentage expenditure","Total expenditure",
"BMI","GDP","Income composition of resources","Schooling")]
COR<-cor(na.omit(DATA[,4:11]))
COR
pairs.panels(DATA[,4:11], histogram=TRUE, pch=19)
names<-c("Country", "Year", "Status", "Life_expectancy", "Alcohol", "percentage_expenditure",
"Total_expenditure", "BMI", "GDP",  "Income_composition_of_resources", "Schooling")
colnames(DATA)<-names
plot(g)
g<-gam(Life_expectancy ~ as.factor(Status)+s(Year,k=4,fx=TRUE)+GDP, data=DATA)
plot(g)
mgam<-gam(Life_expectancy ~ as.factor(Status)+s(Year,k=4,fx=TRUE)+GDP, data=DATA)
pairs.panels(DATA[,4:11], histogram=TRUE, pch=19)
mgam<-gam(Life_expectancy ~ as.factor(Status)+s(Year,k=4,fx=TRUE)+GDP, data=DATA)
summary(mgam)
plot(mgam)
mgam<-gam(Life_expectancy ~ as.factor(Status)+s(Year,k=4,fx=TRUE)+GDP+BMI, data=DATA)
summary(mgam)
mgam<-gam(Life_expectancy ~ as.factor(Status)+s(Year,k=4,fx=TRUE)+s(GDP)+s(BMI), data=DATA)
summary(mgam)
plot(mgam)
str(data)
install.packages(c("Hmisc", "survey"))
# Set up
library(foreign)
library(survey)
library(Hmisc)
setwd("C:/Users/cello/info478/workbook-5-kwanneroy")
demo <- sasxport.get('DEMO_I.XPT')
# Set up
library(foreign)
library(survey)
library(Hmisc)
demo <- sasxport.get('DEMO_I.XPT')
setwd("C:/Users/cello/info478/workbook-5-kwanneroy")
demo <- sasxport.get('DEMO_I.XPT')
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(reshape)
# Set up data
state_income <- read.csv("data/household_median_income_2017.csv")
setwd("C:/Users/cello/info478/project/info478-team2")
# Set up data
state_income <- read.csv("data/household_median_income_2017.csv")
overdose_deaths <- read.csv("data/drug_overdose_deaths.csv")
# Merge Datasets
income_vs_deaths <- merge(state_income, overdose_deaths, by = 'State')
income_vs_deaths_2017 <- income_vs_deaths %>% select(State, X2017, X2017.Number.of.Deaths)
names(income_vs_deaths_2017)[2] <- "income"
names(income_vs_deaths_2017)[3] <- "deaths"
# convert income to an integer
income_vs_deaths_2017$income <- gsub(",","",income_vs_deaths_2017$income)
income_vs_deaths_2017$income =  as.numeric(income_vs_deaths_2017$income)
#final data set merge
mdata <- melt(income_vs_deaths_2017, id="State")
# Making plot
income_vs_deaths_2017_plot <- ggplot(mdata, aes(fill=variable, y=value, x=State)) + geom_point()
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(mdata, aes(fill=variable, y=value, x=State)) + geom_point() + geom_text()
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(mdata, aes(fill=variable, y=value, x=State, label=State)) + geom_point() + geom_text()
income_vs_deaths_2017_plot
View(income_vs_deaths_2017)
# Making plot
income_vs_deaths_2017_plot <- ggplot(mdata, aes(y = income, x = deaths, label = State)) + geom_point() + geom_text()
income_vs_deaths_2017_plot
View(mdata)
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017_plot, aes(y = income, x = deaths, label = State)) + geom_point() + geom_text()
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017_plot, aes(y = income, x = deaths, label = State)) + geom_point() + geom_text()
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017_plot, aes(y = deaths, x = income, label = State)) + geom_point() + geom_text()
# Merge Datasets
income_vs_deaths <- merge(state_income, overdose_deaths, by = 'State')
income_vs_deaths_2017 <- income_vs_deaths %>% select(State, X2017, X2017.Number.of.Deaths)
names(income_vs_deaths_2017)[2] <- "income"
names(income_vs_deaths_2017)[3] <- "deaths"
# convert income to an integer
income_vs_deaths_2017$income <- gsub(",","",income_vs_deaths_2017$income)
income_vs_deaths_2017$income =  as.numeric(income_vs_deaths_2017$income)
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017_plot, aes(y = deaths, x = income, label = State)) + geom_point() + geom_text()
# Making plot
income_vs_deaths_2017_plot <- ggplot(mdata, aes(y = value, x = variable, label = State)) + geom_point() + geom_text()
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(mdata, aes(fill = variable, y = value, label = State)) + geom_point() + geom_text()
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(mdata, aes(x = variable, y = value, label = State)) + geom_point() + geom_text()
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_text()
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_text() + geom_repel()
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_text() + geom_label_repel()
library(ggrepel)
install.packages(ggrepel)
install.packages("ggrepel")
(ggrepel)
library(ggrepel)
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_text() + geom_label_repel()
income_vs_deaths_2017_plot
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_label_repel()
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_label_repel(aes(label = State, x = income, y = deaths)
box.padding = 0.35, point.padding = 0.5)
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_label_repel(aes(label = State, x = income, y = deaths),
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_label_repel(aes(label = State, x = income, y = deaths),
box.padding = 0.35, point.padding = 0.5)
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_label_repel(aes(label = State, x = income, y = deaths),
box.padding = 0.35, point.padding = 0.5)
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y = deaths, label = State)) + geom_point() + geom_label_repel(aes(label = State, x = income, y = deaths),
box.padding = 0.35, point.padding = 0.5)
income_vs_deaths_2017_plot
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(reshape)
library(ggrepel)
# Set up data
state_income <- read.csv("data/household_median_income_2017.csv")
overdose_deaths <- read.csv("data/drug_overdose_deaths.csv")
# Merge Datasets
income_vs_deaths <- merge(state_income, overdose_deaths, by = 'State')
income_vs_deaths_2017 <- income_vs_deaths %>% select(State, X2017, X2017.Number.of.Deaths)
names(income_vs_deaths_2017)[2] <- "income"
names(income_vs_deaths_2017)[3] <- "deaths"
# convert income to an integer
income_vs_deaths_2017$income <- gsub(",","",income_vs_deaths_2017$income)
income_vs_deaths_2017$income =  as.numeric(income_vs_deaths_2017$income)
#final data set merge
mdata <- melt(income_vs_deaths_2017, id="State")
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(fill=variable, y=value, x=State)) + geom_point()
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y= deaths, label =State)) + geom_point() + geom_label_repel(aes(label = State, x = income, y = deaths), box.padding = 0.35, point.padding = 0.5)
income_vs_deaths_2017_plot
# Making plot
income_vs_deaths_2017_plot <- ggplot(income_vs_deaths_2017, aes(x = income, y= deaths, label =State)) + geom_point() +
geom_label_repel(aes(label = State, x = income, y = deaths), box.padding = 0.35, point.padding = 0.5)
income_vs_deaths_2017_plot
